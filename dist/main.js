(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var i=n.getElementsByTagName("script");i.length&&(e=i[i.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();const e=t.p+"07ce0742d9bc527d2311fcb893fc7e03.svg";console.log(e);document.querySelector(".search__btn").addEventListener("click",(async t=>{t.preventDefault();const n=document.querySelector(".search__bar").value;let i;const s=await fetch("http://localhost:8083/recipe",{method:"POST",credentials:"same-origin",mode:"cors",headers:{"Content-Type":"application/json"},body:JSON.stringify({keyword:n})});try{i=await s.json(),console.log(i)}catch(t){console.error(t)}((t={})=>{document.querySelector("main");const n=document.querySelector(".result"),i=document.querySelector(".recipe");let s="",r="";n&&i&&(n.innerHTML="",i.innerHTML=""),s=`\n\t\t<span>${t.count} results for "${t.q}"</span>\n\t`,r=t.count>0?`\n    <ul class="recipe__container">\n      <li class="recipe__card">\n        <a class="link recipe__link" href="${t.hits[0].recipe.url}">\n          <img class="recipe__img" src="${t.hits[0].recipe.image}" alt="${t.hits[0].recipe.label}">\n          <h2 class="recipe__title">${t.hits[0].recipe.label}</h2>\n          <div class="recipe__meta">\n\t\t\t\t\t\t<div class="recipe__info">\n\t\t\t\t\t\t\t<svg width="24" height="24">\n\t\t\t\t\t\t\t\t<use xlink:href="${e}#tabler-flame"/>\n\t\t\t\t\t\t\t</svg>\n            \t<span class="calories">${t.hits[0].recipe.calories.toFixed(0)}calories</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="recipe__info">\n\t\t\t\t\t\t\t<svg width="24" height="24">\n\t\t\t\t\t\t\t\t<use xlink:href="${e}#tabler-clock"/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t<span class="time">${t.hits[0].recipe.totalTime}mins</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="recipe__info">\n\t\t\t\t\t\t\t<svg width="24" height="24">\n\t\t\t\t\t\t\t\t<use xlink:href="${e}#tabler-user"/>\n\t\t\t\t\t\t\t</svg>\n            \t<span class="publisher">${t.hits[0].recipe.source}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="recipe__info">\n            \t<ul class="tags">\n\t\t\t\t\t\t\t\t${t.hits[0].recipe.healthLabels.slice(0,5).map((t=>`<li class="tag">${t}</li>`)).join("")}\n            \t</ul>\n\t\t\t\t\t\t</div>\n          </div>\n        </a>\n      </li>\n    </ul>\n  `:"\n\t\t<span>Oopsâ€¦ Try again!</span>\n\t",n.insertAdjacentHTML("afterbegin",s),i.insertAdjacentHTML("afterbegin",r)})(i)}))})();